-- File: fsm.vhd
-- Generated by MyHDL 0.9.0
-- Date: Thu Jan 26 09:35:01 2017



package pck_fsm is

attribute enum_encoding: string;

    type t_enum_states_1 is (
    UP,
    DOWN,
    GOINGUP,
    GOINGDOWN,
    STOP
);

end package pck_fsm;

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_090.all;

use work.pck_fsm.all;

entity fsm is
    port (
        state: inout t_enum_states_1;
        stopFlag: in std_logic;
        clk: in std_logic;
        reset: in std_logic
    );
end entity fsm;


architecture MyHDL of fsm is





signal downcontrol: std_logic;
signal upcontrol: std_logic;

begin





FSM_LOGIC: process (clk, reset) is
begin
    if (reset = '0') then
        downcontrol <= '0';
        state <= GOINGUP;
        upcontrol <= '0';
    elsif rising_edge(clk) then
        if (state = STOP) then
            null;
        elsif ((state = UP) or (state = DOWN)) then
            upcontrol <= '0';
            downcontrol <= '0';
            state <= STOP;
        elsif (state = GOINGUP) then
            upcontrol <= '1';
            downcontrol <= '0';
            if bool(stopFlag) then
                state <= UP;
            end if;
        elsif (state = GOINGDOWN) then
            upcontrol <= '0';
            downcontrol <= '1';
            if bool(stopFlag) then
                state <= DOWN;
            end if;
        else
            assert False report "End of Simulation" severity Failure;
        end if;
    end if;
end process FSM_LOGIC;

end architecture MyHDL;
